using System;
using System.Collections.Generic;
using System.Diagnostics;
using System.IO;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace MalwareAnalysisGUI.Analysis
{
    class ProcMonTool : DynamicAnalysisEngineTool
    {

        public const string EXEName = @"Resources\ProcMon.exe";

        private Process process;

        private String outputName;

        public ProcMonTool()
        {
            Description = "ProcMon";
        }

        public override void Initialize(Sample s)
        {
            Console.WriteLine(s.FileName);

            File.Copy("Resources\\BaseLogFile.pml", Path.Combine(s.OutputDirectory, "NewLogFile.pml"));

            //create a new output name to easily trap activity
            this.outputName = this.Description + "_" + DateTime.Now.Ticks.ToString() + ".csv";

            ProcessStartInfo psi = new ProcessStartInfo();
            psi.Arguments = " /Quiet /AcceptEula /BackingFile " + Path.Combine(s.OutputDirectory, "NewLogFile.PML") + "";
            psi.FileName = EXEName;

            process = Process.Start(psi);

            //this.Result = sb.ToString();
        }

        public override void Analyze(Sample s)
        {
            //if fakenet is open, close it
            this.closeProcMOn();

            //this hsould lead to ouput capture in this.Result
        }

        private void closeProcMOn()
        {
            try
            {
                //use close window, otherwise fakenet can cause issues if it doesnt clean up after itself
                Process closingProcess = Process.Start(new ProcessStartInfo()
                {
                    Arguments = " /Terminate",
                    FileName = EXEName
                });
                closingProcess.WaitForExit();

                //this.Result = File.ReadAllText(this.outputName);

            }
            catch (Exception ex)
            {

            }
        }

        internal override void SaveResults(Sample s)
        {

            //use close window, otherwise fakenet can cause issues if it doesnt clean up after itself
            Process collectionProcess = Process.Start(new ProcessStartInfo()
            {
                Arguments = " /Quiet /AcceptEula /OpenLog " + Path.Combine(s.OutputDirectory, "NewLogFile.PML") + " /SaveAs " + Path.Combine(s.OutputDirectory, this.outputName) + "",
                FileName = EXEName
            });
            collectionProcess.WaitForExit();
        }

        public override void Dispose()
        {
            this.closeProcMOn();
        }
    }
}
